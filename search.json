[{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"sec-introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction","text":"gentle casual welcome wonders modular Monte Carlo risk analysis use mcmodule. formal approach, invite read package official vignette. developed new R package lack suitable tools handle complex risk analysis models, thousands parameters, hundreds cases, dozens scenarios, several pathways (like farmR!SK). mcmodule framework building modular Monte Carlo risk analysis models. extends capabilities mc2d make working multiple risk pathways, variates, scenarios easier. package includes tools creating stochastic objects data frames, visualizing results, performing uncertainty, sensitivity, convergence analysis.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"a-simple-risk-assessment","dir":"Articles","previous_headings":"Introduction","what":"A simple risk assessment","title":"Introduction","text":"Let’s imagine want buy heifer friend. know farm infected pathogen , disease farm free . reduce risk, plan perform diagnostic test bringing heifer farm. want calculate probability introducing disease purchase one heifer tests negative. risk assessment can performed using base R random sampling functions: similar approach can implemented mc2d (Pouillot Delignette-Muller 2010). package provides additional probability distributions (rpert) useful tools analysing Monte Carlo simulations.","code":"set.seed(123) n_iterations <- 10000  # PARAMETERS # Within-herd prevalence w_prev <- runif(n_iterations, min = 0.15, max = 0.2) # Test sensitivity test_sensi <- runif(n_iterations, min = 0.89, max = 0.91) # Probability an animal is tested in origin test_origin <- 1 # Yes  # EXPRESSIONS # Probability that an animal in an infected herd is infected (a = animal) inf <- w_prev # Probability an animal is tested and is a false negative # (test specificity assumed to be 100%) false_neg <- inf * test_origin * (1 - test_sensi) # Probability an animal is not tested no_test <- inf * (1 - test_origin) # Probability an animal is not detected no_detect <- false_neg + no_test  # RESULT summary(no_detect) ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  ## 0.01353 0.01617 0.01743 0.01750 0.01878 0.02193 library(mc2d) set.seed(123) n_iterations <- 10000  # Within-herd prevalence w_prev <- mcstoc(runif, min = 0.15, max = 0.2,                   nsu = n_iterations, type=\"U\") # Test sensitivity test_sensi <- mcstoc(rpert, min = 0.89, mode = 0.9, max = 0.91,                       nsu = n_iterations, type=\"U\") # Probability an animal is tested in origin test_origin <- mcdata(1, type=\"0\") #Yes   # EXPRESSIONS # Probability that an animal in an infected herd is infected (a = animal) inf <- w_prev # Probability an animal is tested and is a false negative  # (test specificity assumed to be 100%) false_neg <- inf * test_origin * (1 - test_sensi) # Probability an animal is not tested no_test <- inf * (1 - test_origin) # Probability an animal is not detected no_detect <- false_neg + no_test  mc_model<-mc(w_prev, inf, test_origin, test_sensi,               false_neg, no_test, no_detect)  # RESULT hist(mc_model) no_detect ##   node    mode nsv   nsu nva variate    min   mean median    max Nas type outm ## 1    x numeric   1 10000   1       1 0.0138 0.0175 0.0174 0.0218   0    U each"},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"multiple-risk-assessments-at-once","dir":"Articles","previous_headings":"Introduction","what":"Multiple risk assessments at once","title":"Introduction","text":"previous example, calculated risk one specific case. However, know farm also positive pathogen B, also interesting calculate risk introducing well. Pathogen B different within-herd prevalence test sensitivity Pathogen . estimate risk pathogens previous models, : Copy paste code twice different parameters (good coding practices) Wrap code function call twice using pathogen’s parameters arguments Create loop options work, become messy computationally intensive number parameters different situations simulate increases. package mc2d offers clever solution scalability problem: variates. package, parameters stored mcnode class objects. objects arrays numbers represent random variables three dimensions: variability × uncertainty × variates.  previous example, stochastic nodes uncertainty dimension. However, can now use variates dimension calculate risk introduction pathogens time. Instead manually typing parameter values, can also use columns data table mcdata(). useful template setting risk analysis models using mc2d, custom functions facilitate data manipulation visualization, can found repository: https://github.com/NataliaCiria/risk_analysis_template.","code":"set.seed(123) n_iterations <- 10000  # Within-herd prevalence w_prev_min <- mcdata(c(a = 0.15, b = 0.45), nvariates = 2, type=\"0\") w_prev_max <- mcdata(c(a = 0.2, b = 0.6), nvariates = 2, type=\"0\")  w_prev <- mcstoc(runif, min = w_prev_min, max = w_prev_max,                   nsu = n_iterations, nvariates = 2, type=\"U\")  # Test sensitivity test_sensi_min <- mcdata(c(a = 0.89, b = 0.80), nvariates = 2, type = \"0\") test_sensi_mode <- mcdata(c(a = 0.9, b = 0.85), nvariates = 2, type = \"0\") test_sensi_max <- mcdata(c(a = 0.91, b = 0.90), nvariates = 2, type = \"0\")  test_sensi <- mcstoc(rpert, min = test_sensi_min,                       mode = test_sensi_mode, max = test_sensi_max,                       nsu = n_iterations, nvariates = 2, type=\"U\")  # Probability an animal is tested in origin test_origin <- mcdata(c(a = 1, b = 1), nvariates = 2, type=\"0\")   # EXPRESSIONS # Probability that an animal in an infected herd is infected (a = animal) inf <- w_prev # Probability an animal is tested and is a false negative  # (test specificity assumed to be 100%) false_neg <- inf * test_origin * (1 - test_sensi) # Probability an animal is not tested no_test <- inf * (1 - test_origin) # Probability an animal is not detected no_detect <- false_neg + no_test  mc_model<-mc(w_prev, inf, test_origin, test_sensi,               false_neg, no_test, no_detect)  # RESULT no_detect ##   node    mode nsv   nsu nva variate    min   mean median    max Nas type outm ## 1    x numeric   1 10000   2       1 0.0139 0.0175 0.0174 0.0217   0    U each ## 2    x numeric   1 10000   2       2 0.0477 0.0787 0.0783 0.1178   0    U each"},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"when-to-use-mcmodule","dir":"Articles","previous_headings":"Introduction","what":"When to use mcmodule?","title":"Introduction","text":"mc2d multivariate approach works well basic multivariate risk analysis. However, instead purchasing one cow, ’re dealing multiple cattle purchases, different farms, across different pathogens, scenarios, age categories, modeling multiple risk pathways different -scenarios, approach becomes unwieldy. mcmodule addresses challenges providing functions multivariate operations modular management risk model. automates process creating mcnodes assigns metadata (making easy identify variate corresponds data row). Thanks mcnode metadata, enables row-matching nodes different variates, combines probabilities across variates, calculates multilevel trials. risk analysis grows, can create separate modules different pathways, independent parameters, expressions, scenarios can later connected complete model. package particularly useful : Working complex models involve multiple pathways, pathogens, scenarios simultaneously Dealing large parameter sets (hundreds thousands parameters) Handling different numbers variates across different parts model need combined Creating modular risk assessments different components need developed independently later integrated (example collaborative projects) Performing sophisticated sensitivity analyses across multiple model components However, simpler analyses, single pathway models, exploratory work, small models parameters, one-analyses learning risk assessment mcmodule’s additional structure may unnecessary.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"installing-mcmodule","dir":"Articles","previous_headings":"","what":"Installing mcmodule","title":"Introduction","text":"Now let’s explore new package! ’s submitted CRAN, since ’s yet, ’ll install GitHub instead. load package R session. Easy-peasy, ready go! recommended packages load along mcmodule :","code":"# install.packages(\"devtools\") devtools::install_github(\"NataliaCiria/mcmodule\") library(mcmodule) library(dplyr)     # Data manipulation library(ggplot2)   # Plots library(igraph)    # Network analysis library(visNetwork)# Interactive network visualization"},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"building-an-mcmodule","dir":"Articles","previous_headings":"","what":"Building an mcmodule","title":"Introduction","text":"quickly understand key components mcmodule, ’ll start building one using animal imports example included package. detailed view component, refer model elements section package vignette.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"data","dir":"Articles","previous_headings":"Building an mcmodule","what":"Data","title":"Introduction","text":"Let’s consider scenario want evaluate risk introducing pathogen pathogen B region animal imports different regions (north, south, east, west). gathered following data: animal_imports: number animal imports mean standard deviation values per region, number exporting farms region. prevalence_region: estimates herd within-herd prevalence ranges pathogens B, well indicator often tests performed origin test_sensitivity: estimates test sensitivity values pathogen B Now use dplyr::left_join() create imports module data:","code":"animal_imports ##   origin farms_n animals_n_mean animals_n_sd ## 1   nord       5            100            6 ## 2  south      10            130           10 ## 3   east       7            140           12 prevalence_region ##   pathogen origin h_prev_min h_prev_max w_prev_min w_prev_max test_origin ## 1        a   nord       0.08       0.10       0.15        0.2   sometimes ## 2        a  south       0.02       0.05       0.15        0.2   sometimes ## 3        a   east       0.10       0.15       0.15        0.2       never ## 4        b   nord       0.50       0.70       0.45        0.6      always ## 5        b  south       0.25       0.30       0.37        0.4   sometimes ## 6        b   east       0.30       0.50       0.45        0.6     unknown test_sensitivity ##   pathogen test_sensi_min test_sensi_mode test_sensi_max ## 1        a           0.89            0.90           0.91 ## 2        b           0.80            0.85           0.90 imports_data<-prevalence_region%>%    left_join(animal_imports)%>%    left_join(test_sensitivity)%>%    relocate(pathogen, origin, test_origin) ## Joining with `by = join_by(origin)` ## Joining with `by = join_by(pathogen)`"},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"data-keys","dir":"Articles","previous_headings":"Building an mcmodule","what":"Data keys","title":"Introduction","text":"now use merged imports_data table. However, useful understand input dataset parameter comes , dataset provides information different keys. context, keys fields (combined) uniquely identify row table. example: animal_imports provided information region \"origin\" prevalence_region provided information \"pathogen\" region \"origin\" test_sensitivity provided information \"pathogen\" resulting merged table, imports_data, therefore two keys: \"pathogen\" \"origin\". However, parameters use keys, example, \"test_sensi\" information \"pathogen\". Knowing keys parameter crucial performing multivariate operations, calculating totals. make relationships explicit model, need provide data keys. defined list one element input dataset, specifying columns keys dataset.","code":"imports_data_keys <- list(   animal_imports =  list(     cols = names(animal_imports),     keys = \"origin\"   ),   prevalence_region = list(     cols = names(prevalence_region),     keys = c(\"pathogen\", \"origin\")   ),   test_sensitivity = list(     cols = names(test_sensitivity),     keys = \"pathogen\"   ) )"},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"mcnodes-table","dir":"Articles","previous_headings":"Building an mcmodule","what":"mcnodes table","title":"Introduction","text":"values keys established, still need information build stochastic parameters. mcnode table specifies build mcnodes data table. specifies parameters included model, type parameters (mc_func stochastic), columns look data table build mcnodes (name mcnode, another variable data columns), well transformations usefull encode categorical data values mcnodes must always numeric. mcnode: Name Monte Carlo node (required) description: Description parameter mc_func: Probability distribution from_variable: Column name, comes column name different mcnode transformation: Transformation applied original column values sensi_analysis: Whether include sensitivity analysis imports_mctable example. mctable can hard-coded R, ’s efficient prepare CSV external file. approach also allows table included part model documentation. data table mctable must complement : mcnodes without mc_func (like farms_n), needs matching column name (\"farms_n\") data table mcnodes mc_func, need columns probability distribution argument data table. example: h_prev runif distribution requires \"h_prev_min\" \"h_prev_max\" animals_n rnorm distribution requires \"animals_n_mean\" \"animals_n_sd\" encoding categorical variables mcnodes (data transformation), can use R code value placeholder mcnode name column name (specified from_variable)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"expressions","dir":"Articles","previous_headings":"Building an mcmodule","what":"Expressions","title":"Introduction","text":"Finally, need write model’s mathematical expression. expressions ideally include arithmetic operations, R functions (exceptions covered later “tricks tweaks”). ’ll wrap using quote() aren’t executed immediately stored later evaluation eval_model().","code":"imports_exp<-quote({   # Probability that an animal in an infected herd is infected (a = animal)   inf <- w_prev   # Probability an animal is tested and is a false negative    # (test specificity assumed to be 100%)   false_neg <- inf * test_origin * (1 - test_sensi)   # Probability an animal is not tested   no_test <- inf * (1 - test_origin)   # Probability an animal is not detected   no_detect <- false_neg + no_test })"},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"evaluating-a-model","dir":"Articles","previous_headings":"Building an mcmodule","what":"Evaluating a model","title":"Introduction","text":"components place, ’re now ready create first mcmodule using eval_module(). mcmodule S3 object class, essentially list contains risk assessment components structured format. mcmodule contains input data mathematical expressions (exp) ensure traceability. input calculated parameters stored node_list. node contains mcnode also important metadata: node type (input output), source dataset columns, keys, calculation method, . specific metadata varies depending node’s characteristics. examples: now mcmodule, can begin exploring possibilities!","code":"imports<-eval_module(   exp = c(imports=imports_exp),   data = imports_data,   mctable = imports_mctable,   data_keys = imports_data_keys ) ##  ## imports evaluated ##  ## mcmodule created (expressions: imports) class(imports) ## [1] \"mcmodule\" names(imports) ## [1] \"data\"      \"exp\"       \"node_list\" \"modules\" imports$node_list$w_prev ## $type ## [1] \"in_node\" ##  ## $mc_func ## [1] \"runif\" ##  ## $description ## [1] \"Within herd prevalence\" ##  ## $inputs_col ## [1] \"w_prev_min\" \"w_prev_max\" ##  ## $input_dataset ## [1] \"prevalence_region\" ##  ## $keys ## [1] \"pathogen\" \"origin\"   ##  ## $module ## [1] \"imports\" ##  ## $mc_name ## [1] \"w_prev\" ##  ## $mcnode ##   node    mode  nsv nsu nva variate  min  mean median max Nas type outm ## 1    x numeric 1001   1   6       1 0.15 0.175  0.175 0.2   0    V each ## 2    x numeric 1001   1   6       2 0.15 0.175  0.174 0.2   0    V each ## 3    x numeric 1001   1   6       3 0.15 0.175  0.174 0.2   0    V each ## 4    x numeric 1001   1   6       4 0.45 0.524  0.525 0.6   0    V each ## 5    x numeric 1001   1   6       5 0.37 0.385  0.386 0.4   0    V each ## 6    x numeric 1001   1   6       6 0.45 0.523  0.524 0.6   0    V each ##  ## $data_name ## [1] \"imports_data\" imports$node_list$no_detect ## $node_exp ## [1] \"false_neg + no_test\" ##  ## $type ## [1] \"out_node\" ##  ## $inputs ## [1] \"false_neg\" \"no_test\"   ##  ## $module ## [1] \"imports\" ##  ## $mc_name ## [1] \"no_detect\" ##  ## $keys ## [1] \"pathogen\" \"origin\"   ##  ## $param ## [1] \"false_neg\" \"no_test\"   ##  ## $mcnode ##   node    mode  nsv nsu nva variate    min   mean median   max Nas type outm ## 1    x numeric 1001   1   6       1 0.0822 0.0961 0.0960 0.110   0    V each ## 2    x numeric 1001   1   6       2 0.0824 0.0960 0.0959 0.110   0    V each ## 3    x numeric 1001   1   6       3 0.1500 0.1746 0.1742 0.200   0    V each ## 4    x numeric 1001   1   6       4 0.0500 0.0787 0.0781 0.110   0    V each ## 5    x numeric 1001   1   6       5 0.2059 0.2214 0.2214 0.237   0    V each ## 6    x numeric 1001   1   6       6 0.4504 0.5233 0.5241 0.600   0    V each ##  ## $data_name ## [1] \"imports_data\""},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"sec-calculating-totals","dir":"Articles","previous_headings":"","what":"Summarizing","title":"Introduction","text":"imports mcmodule, can already see raw mcnode results probability imported animal detected (no_detect). However, ’s difficult determine pathogen region results refer . mc_summary() function solves problem linking mcnode results key columns data. Note printed summary looks similar raw mcnode, ’s actually just dataframe containing statistical measures, whereas actual mcnode large array numbers dimensions (uncertainty × 1 × variates),","code":"mc_summary(mcmodule = imports, mc_name = \"no_detect\") ##     mc_name pathogen origin       mean          sd        Min       2.5% ## 1 no_detect        a   nord 0.09607419 0.007983987 0.08215801 0.08318831 ## 2 no_detect        a  south 0.09600944 0.007877740 0.08241757 0.08325282 ## 3 no_detect        a   east 0.17458727 0.014431815 0.15001204 0.15091040 ## 4 no_detect        b   nord 0.07870798 0.011697425 0.05000413 0.05776186 ## 5 no_detect        b  south 0.22143628 0.006212484 0.20587390 0.21013928 ## 6 no_detect        b   east 0.52329144 0.043320684 0.45044560 0.45356043 ##          25%        50%        75%     97.5%       Max  nsv Na's ## 1 0.08903559 0.09597030 0.10302211 0.1094443 0.1104595 1001    0 ## 2 0.08913769 0.09594299 0.10261766 0.1093425 0.1104777 1001    0 ## 3 0.16228149 0.17419132 0.18660810 0.1992568 0.1999452 1001    0 ## 4 0.07012427 0.07811934 0.08762139 0.1022697 0.1100034 1001    0 ## 5 0.21712775 0.22136949 0.22595050 0.2331940 0.2373635 1001    0 ## 6 0.48400210 0.52407730 0.55987018 0.5956471 0.5998064 1001    0"},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"calculating-totals","dir":"Articles","previous_headings":"","what":"Calculating totals","title":"Introduction","text":"imports, probability infected animal infected farm goes undetected (\"no_detect\"). animals (variate) probability, can use total number animals selected per farm (\"animals_n\") number trials (trials_n) determine probability least one infected animal one farm detected (no_detect_set). Note \"animals_n\" found mcnode imports (used imports$exp), can automatically generated trial_totals() ’s included imports_mctable required data exists imports$data. Note function returns mcmodule additional nodes. Total nodes special metadata fields, always include summary default.","code":"# Probability of at least one imported animal from an infected herd is not detected  imports <- trial_totals(   mcmodule = imports,   mc_names = \"no_detect\",   trials_n = \"animals_n\",   mctable = imports_mctable ) imports$node_list$no_detect_set$summary ##         mc_name pathogen origin      mean           sd       Min      2.5% ## 1 no_detect_set        a   nord 0.9999297 7.727405e-05 0.9994212 0.9997105 ## 2 no_detect_set        a  south 0.9999946 1.050803e-05 0.9998086 0.9999702 ## 3 no_detect_set        a   east 1.0000000 1.660241e-09 1.0000000 1.0000000 ## 4 no_detect_set        b   nord 0.9993751 8.936518e-04 0.9922377 0.9966265 ## 5 no_detect_set        b  south 1.0000000 1.150669e-12 1.0000000 1.0000000 ## 6 no_detect_set        b   east 1.0000000 0.000000e+00 1.0000000 1.0000000 ##         25%       50%       75%     97.5%       Max  nsv Na's ## 1 0.9999072 0.9999566 0.9999812 0.9999955 0.9999984 1001    0 ## 2 0.9999941 0.9999978 0.9999993 0.9999999 1.0000000 1001    0 ## 3 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1001    0 ## 4 0.9992492 0.9997117 0.9998958 0.9999839 0.9999970 1001    0 ## 5 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1001    0 ## 6 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1001    0"},{"path":[]},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"simple-multilevel","dir":"Articles","previous_headings":"Calculating totals > Multilevel trials","what":"Simple multilevel","title":"Introduction","text":"considering animals (trials_n) different farms (subset_n), must account farm’s probability infected (subset_p) individual animal’s probability infected (trial_p).","code":"# Probability of at least one animal from at least one herd being is not detected (probability of a herd being infected: h_prev) imports <- trial_totals(   mcmodule = imports,   mc_names = \"no_detect\",   trials_n = \"animals_n\",   subsets_n = \"farms_n\",   subsets_p = \"h_prev\",   mctable = imports_mctable )  # Result imports$node_list$no_detect_set ## $mcnode ##   node    mode  nsv nsu nva variate   min  mean median   max Nas type outm ## 1    x numeric 1001   1   6       1 0.341 0.376  0.376 0.409   0    V each ## 2    x numeric 1001   1   6       2 0.183 0.297  0.296 0.401   0    V each ## 3    x numeric 1001   1   6       3 0.522 0.606  0.607 0.679   0    V each ## 4    x numeric 1001   1   6       4 0.968 0.987  0.990 0.998   0    V each ## 5    x numeric 1001   1   6       5 0.944 0.959  0.960 0.972   0    V each ## 6    x numeric 1001   1   6       6 0.918 0.967  0.972 0.992   0    V each ##  ## $param ## [1] \"no_detect\" \"animals_n\" \"farms_n\"   \"h_prev\"    ##  ## $inputs ## [1] \"no_detect\" \"animals_n\" \"farms_n\"   \"h_prev\"    ##  ## $description ## [1] \"Probability of at least one no_detect in a set (set)\" ##  ## $node_expression ## [1] \"1-(1-h_prev*(1-(1-no_detect)^animals_n))^farms_n\" ##  ## $type ## [1] \"total\" ##  ## $module ## [1] \"imports\" ##  ## $keys ## [1] \"pathogen\" \"origin\"   ##  ## $scenario ## NULL ##  ## $data_name ## [1] \"imports_data\" ##  ## $prefix ## [1] \"\" ##  ## $total_type ## [1] \"multilevel set prob\" ##  ## $summary ##         mc_name pathogen origin      mean          sd       Min      2.5% ## 1 no_detect_set        a   nord 0.3757093 0.019780604 0.3411265 0.3434805 ## 2 no_detect_set        a  south 0.2965334 0.065070120 0.1830478 0.1890084 ## 3 no_detect_set        a   east 0.6058290 0.045447665 0.5217747 0.5249201 ## 4 no_detect_set        b   nord 0.9874700 0.008092124 0.9684235 0.9701125 ## 5 no_detect_set        b  south 0.9593817 0.008140106 0.9437803 0.9446341 ## 6 no_detect_set        b   east 0.9665291 0.021517365 0.9176607 0.9208247 ##         25%       50%       75%     97.5%       Max  nsv Na's ## 1 0.3587840 0.3755017 0.3929100 0.4079328 0.4094456 1001    0 ## 2 0.2403639 0.2955926 0.3544173 0.3972689 0.4009965 1001    0 ## 3 0.5683608 0.6072660 0.6450154 0.6767504 0.6794082 1001    0 ## 4 0.9813751 0.9897969 0.9946227 0.9973229 0.9975551 1001    0 ## 5 0.9528116 0.9603880 0.9663043 0.9711450 0.9716914 1001    0 ## 6 0.9506669 0.9723218 0.9853882 0.9918015 0.9921830 1001    0"},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"combining-mcmodules","dir":"Articles","previous_headings":"","what":"Combining mcmodules","title":"Introduction","text":"…","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"visualizing-mcmodule-models","dir":"Articles","previous_headings":"","what":"Visualizing mcmodule models","title":"Introduction","text":"","code":"mc_network(imports)"},{"path":[]},{"path":[]},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"remove-mcnode-nas","dir":"Articles","previous_headings":"Tricks and tweaks","what":"Remove mcnode NAs","title":"Introduction","text":"Useful include expressions division denominator can potentially 0 return Inf NaN, actually want parameter 0.","code":"sample_mcnode <- mcstoc(runif,                min = mcdata(c(NA, 0.2, -Inf), type = \"0\", nvariates = 3),                max = mcdata(c(NA, 0.3, Inf), type = \"0\", nvariates = 3),                nvariates = 3 ) ## Warning in (function (n, min = 0, max = 1) : NAs produced ## Warning in (function (n, min = 0, max = 1) : NAs produced # Replace NA and Inf with 0 clean_mcnode <- mcnode_na_rm(sample_mcnode)"},{"path":[]},{"path":"https://nataliaciria.github.io/mcmodule/articles/intro.html","id":"some-functions-that-can-be-used-without-mcmodules","dir":"Articles","previous_headings":"Tricks and tweaks","what":"Some functions that can be used without mcmodules","title":"Introduction","text":"mc_summary data mcmodule create_mcnodes","code":""},{"path":[]},{"path":[]},{"path":"https://nataliaciria.github.io/mcmodule/articles/mcmodule.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"mcmodule","text":"guide presents flexible approach building risk assessment models Monte Carlo simulations R. framework multivariate, allowing simultaneous analysis multiple variates (different categories groups), modular, breaking complex systems manageable components. mc2d R package (Pouillot Delignette-Muller 2010) provides tools build analyse models involving multiple variables uncertainties based Monte Carlo simulations. However, tools limited handling multiple variates, complex models can difficult analyse interpret. mcmodule package builds R package mc2d enhance model flexibility. new package provides: Tools add metadata model elements better traceability debugging Tools handle complex multivariate variables framework break Monte Carlo models smaller, reusable components (modules) can analysed independently integration","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/mcmodule.html","id":"multivariate-monte-carlo-simulations","dir":"Articles","previous_headings":"","what":"Multivariate Monte-Carlo simulations","title":"mcmodule","text":"section draws mc2d package vignette, adaptations modular Monte Carlo simulations. Quantitative risk analysis numerical assessment risk facilitate decision making face uncertainty. Monte Carlo simulation technique used model analyse uncertainty (Vose 2008). typical two-dimensional Monte Carlo simulation, one dimension represents variability represents uncertainty. However, framework, take different approach : combine variability uncertainty one dimension (u) use variates (representing different groups categories) dimension () approach enables us track multiple values across groups simultaneously using variates handle cases values must aggregated animal movements, farms, grouped entities. Although technically possible separate variability uncertainty, exponential increase computational programming requirements make impractical models size. framework, mcnode array dimensions (u × 1 × ), u dimension variability uncertainty combined, number variates. input parameters uncertain, use term “uncertainty dimension” throughout document refer combined dimension variability uncertainty. example, buying number cows heifers specific region, mcnode herd prevalence : Multiple variates (rows), representing specific animal category-disease combination. variables define distinguish variates called keys. Probability values generated PERT distribution (rpert), using minimum, mode, maximum parameters across u iterations (columns) model uncertainty estimates.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/mcmodule.html","id":"scenarios","dir":"Articles","previous_headings":"Multivariate Monte-Carlo simulations","what":"Scenarios","title":"mcmodule","text":"framework enables creation comparison scenarios. comparisons, need baseline scenario (scenario “0”) one alternative scenarios. Variates within scenario called “groups.” every scenario needs contain baseline groups, groups present alternative scenarios must exist baseline. scenario id, group id, row number three mcnode properties enable row matching row aggregation operations.","code":""},{"path":[]},{"path":"https://nataliaciria.github.io/mcmodule/articles/mcmodule.html","id":"sec-element-wise-operations","dir":"Articles","previous_headings":"Multivariate Monte-Carlo simulations > Multivariate nodes operations","what":"Element-wise operations","title":"mcmodule","text":"operations model element-wise, meaning calculation occurs independently matching elements across nodes. operations preserve node dimensions applying functions (multiplication addition) corresponding elements, allowing uncertainties variates propagate calculations.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/mcmodule.html","id":"sec-row-matching","dir":"Articles","previous_headings":"Multivariate Monte-Carlo simulations > Multivariate nodes operations","what":"Row matching","title":"mcmodule","text":"Row matching operations align nodes ensure compatible dimensions properly matched rows element-wise calculations. especially important working nodes containing different scenarios. matching process may require reordering, duplicating, adding rows either nodes. Row matching nodes needed following cases combinations:","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/mcmodule.html","id":"group-matching","dir":"Articles","previous_headings":"Multivariate Monte-Carlo simulations > Multivariate nodes operations > Row matching","what":"Group matching","title":"mcmodule","text":"Nodes scenarios/dimensions different group order Check keys define groups different order  Assign common group ids, based keys  Reorder rows align group ids. similar dplyr left_join","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/mcmodule.html","id":"scenario-matching","dir":"Articles","previous_headings":"Multivariate Monte-Carlo simulations > Multivariate nodes operations > Row matching","what":"Scenario matching","title":"mcmodule","text":"Nodes groups different scenarios. general rule operations scenario specified, assumed variable takes values baseline scenario. Check scenarios different  missing scenarios, duplicate baseline scenario (scenario “0”)  nodes matched scenario used element-wise operation, resulting node contain scenarios input nodes. conceptually similar dplyr full_join, except unmatched rows use values baseline scenario.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/mcmodule.html","id":"null-matching","dir":"Articles","previous_headings":"Multivariate Monte-Carlo simulations > Multivariate nodes operations > Row matching","what":"Null matching","title":"mcmodule","text":"nodes contain different scenarios groups, groups may missing certain nodes. missing groups (called “null” variates) assigned probability 0. operation typically complements scenario matching. Check missing groups  Add null variates probability 0 missing groups (apply scenario matching)  nodes matched scenario element-wise operation, resulting node contain groups input nodes","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/mcmodule.html","id":"combined-probabilities","dir":"Articles","previous_headings":"Multivariate Monte-Carlo simulations > Multivariate nodes operations","what":"Combined probabilities","title":"mcmodule","text":"special type element-wise operation automatically deals row matching. Combines probabilities multiple events assuming independence, using formula: P(∪B)=1−(1−P())(1−P(B)) P(\\cup B) = 1 - (1-P())(1-P(B))","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/mcmodule.html","id":"sec-row-aggregation","dir":"Articles","previous_headings":"Multivariate Monte-Carlo simulations > Multivariate nodes operations","what":"Row aggregation","title":"mcmodule","text":"Row aggregation operations combine values across multiple rows (variates) mcnode using specific criteria. operations calculate overall probabilities sum quantities across groups.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/mcmodule.html","id":"probabilities","dir":"Articles","previous_headings":"Multivariate Monte-Carlo simulations > Multivariate nodes operations > Row aggregation","what":"Probabilities","title":"mcmodule","text":"events can occur independently across multiple variates node. example, disease might present animals different regions farms. calculate probability event occurring least one variate within subset, first group data aggregation keys (agg_keys). , subset, use standard probability formula independent trials find probability event occurring least one variate. p_agg=1−∏p⊆S(1−p) p\\_{agg}=1-\\prod_{p\\subseteq S}(1-p) : S represents subset variates included aggregation p represents probability event occurring p_agg represents probability occurrence least one variate S scenarios simulated, scenario id must always included aggregation key, probabilities calculated across different -scenarios. can also keep variariates, corresponding aggregated values, ensure dimensions compatibility calculations.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/mcmodule.html","id":"quantities","dir":"Articles","previous_headings":"Multivariate Monte-Carlo simulations > Multivariate nodes operations > Row aggregation","what":"Quantities","title":"mcmodule","text":"working quantities (number animals farms), calculate totals summing values across variates within subset. n_agg=∑n⊆Sn n\\_{agg}=\\sum_{n\\subseteq S} n : S represents subset variates included aggregation n represents quantity value n_agg represents sum quantities across variates S","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/mcmodule.html","id":"trials","dir":"Articles","previous_headings":"Multivariate Monte-Carlo simulations > Multivariate nodes operations","what":"Trials","title":"mcmodule","text":"framework, nodes typically represent probability success single trial binary outcome (success/failure). trial one instance event might occur, example, animal, farm, batch, animal movement, farm visit. trial two possible outcomes, whether animal infected , whether test positive negative. single-level trials, trials independent probability success1. probability processes follow hierarchical structure events occur different levels. example, animals purchased multiple farms, must consider probability farm infected probability individual animal within farm infected. means infection probabilities animals farm independent. multilevel trials, trials organized subsets, subset selection probability. subset represents group sharing specific characteristics, example, animals farm health status. following probability processes calculations based Chapter 5 Handbook Import Risk Analysis Animals Animal Products Volume 2. Quantitative risk assessment (Murray 2004).","code":""},{"path":"https://nataliaciria.github.io/mcmodule/articles/mcmodule.html","id":"single-level-trials","dir":"Articles","previous_headings":"Multivariate Monte-Carlo simulations > Multivariate nodes operations > Trials","what":"Single-level trials","title":"mcmodule","text":"single-level trials, trial independent probability success (trial_ptrial\\_p). set trials_ntrials\\_n trials, probability least one success : set_p=1−(1−trial_p)trials_n set\\_p= 1-(1-trial\\_p)^{trials\\_n} imports_mcmodule, probability infected animal infected farm goes undetected (no_detect_ano\\_detect\\_a). animals (variate) probability, can use total number animals selected per farm (animals_nanimals\\_n) number trials (trials_n) determine probability least one infected animal one farm detected (no_detect_setno\\_detect\\_set). Note animals_nanimals\\_n isn’t defined mcnode imports_mcmodule (used imports_mcmodule$model_exp), can automatically generated trial_totals() ’s included imports_mctable required data exists imports_mcmodule$data.","code":"# Single-level trial imports_mcmodule <- trial_totals(   mcmodule = imports_mcmodule,   mc_names = \"no_detect_a\", # trial_p   trials_n = \"animals_n\",   mctable = imports_mctable )  # Probability that at least one infected animal from an infected farm is not detected mc_summary(imports_mcmodule,\"no_detect_a_set\")[,-1] #>   pathogen origin      mean           sd       Min      2.5%       25% #> 1        a   nord 0.9999344 7.271373e-05 0.9994190 0.9997340 0.9999148 #> 2        a  south 0.9999945 9.174980e-06 0.9998817 0.9999651 0.9999936 #> 3        a   east 1.0000000 3.759259e-10 1.0000000 1.0000000 1.0000000 #> 4        b   nord 0.9994337 7.901747e-04 0.9939744 0.9970818 0.9993747 #> 5        b  south 1.0000000 4.055315e-14 1.0000000 1.0000000 1.0000000 #> 6        b   east 1.0000000 0.000000e+00 1.0000000 1.0000000 1.0000000 #>         50%       75%     97.5%       Max  nsv Na's #> 1 0.9999601 0.9999825 0.9999952 0.9999982 1001    0 #> 2 0.9999979 0.9999993 0.9999999 1.0000000 1001    0 #> 3 1.0000000 1.0000000 1.0000000 1.0000000 1001    0 #> 4 0.9997226 0.9998992 0.9999833 0.9999951 1001    0 #> 5 1.0000000 1.0000000 1.0000000 1.0000000 1001    0 #> 6 1.0000000 1.0000000 1.0000000 1.0000000 1001    0"},{"path":"https://nataliaciria.github.io/mcmodule/articles/mcmodule.html","id":"multilevel-trials","dir":"Articles","previous_headings":"Multivariate Monte-Carlo simulations > Multivariate nodes operations > Trials","what":"Multilevel trials","title":"mcmodule","text":"Simple multilevel multilevel trials, account hierarchical structures trials organized subsets. example, considering animals (trials_ntrials\\_n) different farms (subset_nsubset\\_n), must account farm’s selection probability (subset_psubset\\_p) individual animal’s probability success (trial_ptrial\\_p). probability least one success hierarchical structure given : set_p=1−(1−subset_p⋅(1−(1−trial_p)trial_n))subset_n set\\_p= 1-(1-subset\\_p \\cdot (1-(1-trial\\_p)^{trial\\_n}))^{subset\\_n} : trials_p represents probability trial subset success trials_n represents number trials subset subset_p represents probability subset selected subset_n represents number subsets set_p represents probability least one trial least one subsetbeing success considering animals (trials_n) different farms (subset_n, must account farm’s probability infected (subsets_p) individual animal’s probability infected (trial_p).   Multiple group multilevel trials multiple group multilevel trials, several variates (groups) can belong subset. example, selecting animals different categories (cow, calf, heifer, bull) farm, infection probabilities independent. include aggregation keys groups independent calculate trial probabilities, example, aggregating variates different animal categories farm. calculation, subset_p subset_n values must identical across variates aggregated. trial_p_agg=1−∏trial_p⊆S(1−trial_p)trial_n trial\\_p\\_agg=1-\\prod_{trial\\_p\\subseteq S}(1-trial\\_p)^{trial\\_n} set_p_agg=1−(1−subset_p⋅trial_p_agg)subset_n set\\_p\\_agg = 1-(1-subset\\_p \\cdot trial\\_p\\_agg)^{subset\\_n} : S represents variates included aggregation trials_p represents probability success trial subset trials_n represents number trials subset trials_p _agg represents probability success least one variate least one aggregated variates subset_p represents probability subset selected subset_n represents number subsets set_p_agg represents probability success least one trial least one aggregated variates least one subset row aggregation, can keep variates maintain dimensions compatibility calculations.","code":"# Simple multilevel trial imports_mcmodule <- trial_totals(   mcmodule = imports_mcmodule,   mc_names = \"no_detect_a\", # trial_p   trials_n = \"animals_n\",   subsets_n = \"farms_n\",   subsets_p = \"h_prev\",   mctable = imports_mctable )  # Probability that at least one infected animal from at least one farm is not detected mc_summary(imports_mcmodule,\"no_detect_a_set\", digits=2)[,-1] #>   pathogen origin mean     sd  Min 2.5%  25%  50%  75% 97.5%  Max  nsv Na's #> 1        a   nord 0.38 0.0200 0.34 0.34 0.36 0.38 0.39  0.41 0.41 1001    0 #> 2        a  south 0.30 0.0600 0.18 0.19 0.24 0.30 0.36  0.40 0.40 1001    0 #> 3        a   east 0.60 0.0400 0.52 0.53 0.57 0.60 0.64  0.67 0.68 1001    0 #> 4        b   nord 0.99 0.0081 0.97 0.97 0.98 0.99 0.99  1.00 1.00 1001    0 #> 5        b  south 0.96 0.0081 0.94 0.94 0.95 0.96 0.97  0.97 0.97 1001    0 #> 6        b   east 0.97 0.0200 0.92 0.92 0.95 0.97 0.98  0.99 0.99 1001    0"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://nataliaciria.github.io/mcmodule/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Natalia Ciria. Author, maintainer, copyright holder. Alberto Allepuz. Thesis advisor. Giovanna Ciaravino. Thesis advisor.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ciria N (2025). mcmodule: Modular Monte Carlo Risk Analysis. R package version 0.0.0.9000, https://github.com/NataliaCiria/mcmodule.","code":"@Manual{,   title = {mcmodule: Modular Monte Carlo Risk Analysis},   author = {Natalia Ciria},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/NataliaCiria/mcmodule}, }"},{"path":"https://nataliaciria.github.io/mcmodule/index.html","id":"mcmodule-","dir":"","previous_headings":"","what":"Modular Monte Carlo Risk Analysis","title":"Modular Monte Carlo Risk Analysis","text":"Framework building modular Monte Carlo risk analysis models. extends capabilities mc2d facilitate working multiple risk pathways, variates scenarios. package includes tools creating stochastic objects data frames, visualising results, performing uncertainty, sensitivity convergence analysis.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Modular Monte Carlo Risk Analysis","text":"Install CRAN: Install latest development version GitHub (requires devtool package)","code":"install.packages(\"mcmodule\") library(\"mcmodule\") # install.packages(\"devtools\") devtools::install_github(\"NataliaCiria/mcmodule\")"},{"path":"https://nataliaciria.github.io/mcmodule/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Modular Monte Carlo Risk Analysis","text":"[Example] documentation examples can found vignette.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/index.html","id":"citations","dir":"","previous_headings":"","what":"Citations","title":"Modular Monte Carlo Risk Analysis","text":"use mcmodule research, please cite: Ciria, N. (2024). mcmodule: Modular Monte Carlo Risk Analysis. R package version 1.0.0. https://github.com/NataliaCiria/mcmodule","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/add_group_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Group IDs to Data Frames — add_group_id","title":"Add Group IDs to Data Frames — add_group_id","text":"Add Group IDs Data Frames","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/add_group_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Group IDs to Data Frames — add_group_id","text":"","code":"add_group_id(x, y = NULL, by = NULL)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/add_group_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Group IDs to Data Frames — add_group_id","text":"x First dataset y Optional second dataset Grouping variables","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/add_group_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Group IDs to Data Frames — add_group_id","text":"Dataframe list dataframes added group IDs","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/add_group_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Group IDs to Data Frames — add_group_id","text":"","code":"if (FALSE) { # \\dontrun{ add_group_id(imports_data, by = c(\"pathogen \", \"origin\")) } # }"},{"path":"https://nataliaciria.github.io/mcmodule/reference/add_prefix.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Prefix to Node Names — add_prefix","title":"Add Prefix to Node Names — add_prefix","text":"Adds prefix node_list names input nodes. Preserves previous prefixes unless rewrite_module argument specified.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/add_prefix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Prefix to Node Names — add_prefix","text":"","code":"add_prefix(mcmodule, prefix = NULL, rewrite_module = NULL)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/add_prefix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Prefix to Node Names — add_prefix","text":"mcmodule mcmodule node_list object prefix String add prefix new mcmodule mcnodes, defaults mcmodule name rewrite_module Name module rewrite prefixes","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/add_prefix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Prefix to Node Names — add_prefix","text":"mcmodule new prefixes node_list names","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/add_prefix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Prefix to Node Names — add_prefix","text":"","code":"print(names(imports_mcmodule$node_list)) #> [1] \"w_prev\"      \"test_origin\" \"test_sensi\"  \"inf_a\"       \"false_neg_a\" #> [6] \"no_test_a\"   \"no_detect_a\" imports_mcmodule_prefix<-purchase <- add_prefix(imports_mcmodule) print(names(imports_mcmodule_prefix$node_list)) #> [1] \"imports_mcmodule_w_prev\"      \"imports_mcmodule_test_origin\" #> [3] \"imports_mcmodule_test_sensi\"  \"imports_mcmodule_inf_a\"       #> [5] \"imports_mcmodule_false_neg_a\" \"imports_mcmodule_no_test_a\"   #> [7] \"imports_mcmodule_no_detect_a\""},{"path":"https://nataliaciria.github.io/mcmodule/reference/agg_totals.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Across Groups — agg_totals","title":"Aggregate Across Groups — agg_totals","text":"Combines node values across specified grouping variables using different aggregation methods. aggregation method can specified via agg_func parameter: \"prob\": Combined probability assuming independence \"sum\": Sum values \"avg\": Average values NULL: defaults \"sum\" mc_name ends \"_n\", else defaults \"prob\"","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/agg_totals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Across Groups — agg_totals","text":"","code":"agg_totals(   mcmodule,   mc_name,   agg_keys = NULL,   suffix = \"agg\",   name = NULL,   summary = TRUE,   keep_variates = FALSE,   agg_func = NULL )"},{"path":"https://nataliaciria.github.io/mcmodule/reference/agg_totals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Across Groups — agg_totals","text":"mcmodule mcmodule object containing nodes data mc_name name node aggregate agg_keys grouping variables aggregation suffix suffix output node name (default: \"agg\") name Custom name output node (optional) summary whether include summary statistics (default: TRUE) keep_variates whether preserve individual values (default: FALSE) agg_func aggregation method (\"prob\", \"sum\", \"avg\", NULL)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/agg_totals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Across Groups — agg_totals","text":"mcmodule new aggregated node added","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/agg_totals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate Across Groups — agg_totals","text":"","code":"imports_mcmodule <- agg_totals(   imports_mcmodule, \"no_detect_a\",   agg_keys = c(\"scenario_id\", \"pathogen\") ) #> 3 variates per group for no_detect_a print(imports_mcmodule$node_list$no_detect_a_agg$summary) #>           mc_name scenario_id pathogen      mean         sd       Min      2.5% #> 1 no_detect_a_agg           0        a 0.3264681 0.01416266 0.2891882 0.2996985 #> 4 no_detect_a_agg           0        b 0.6610791 0.03083952 0.5904521 0.6087351 #>         25%       50%       75%     97.5%       Max  nsv Na's #> 1 0.3160279 0.3266146 0.3365067 0.3530371 0.3632177 1001    0 #> 4 0.6354902 0.6612333 0.6865692 0.7119438 0.7183356 1001    0"},{"path":"https://nataliaciria.github.io/mcmodule/reference/animal_imports.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Animal Import Data — animal_imports","title":"Example Animal Import Data — animal_imports","text":"dataset containing information animal imports three different regions","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/animal_imports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Animal Import Data — animal_imports","text":"","code":"animal_imports"},{"path":[]},{"path":"https://nataliaciria.github.io/mcmodule/reference/animal_imports.html","id":"animal-imports","dir":"Reference","previous_headings":"","what":"animal_imports","title":"Example Animal Import Data — animal_imports","text":"data frame 3 rows 4 columns: origin Region origin (nord, south, east) farms_n Number farms exporting animals animals_n_mean Mean number animals exported per farm animals_n_sd Standard deviation animals exported per farm","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/animal_imports.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Animal Import Data — animal_imports","text":"Simulated data demonstration purposes","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/at_least_one.html","id":null,"dir":"Reference","previous_headings":"","what":"Combined Probability of Events (At least one) — at_least_one","title":"Combined Probability of Events (At least one) — at_least_one","text":"Combines probabilities multiple events assuming independence, using formula P(B) = 1 - (1-P())*(1-P(B)). macthes dimensions automatically.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/at_least_one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combined Probability of Events (At least one) — at_least_one","text":"","code":"at_least_one(mcmodule, mc_names, name = NULL, prefix = NULL, summary = TRUE)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/at_least_one.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combined Probability of Events (At least one) — at_least_one","text":"mcmodule Module containing node list input data frames mc_names Vector node names combine name Optional custom name output node (default: NULL) prefix Optional prefix output node name (default: NULL) summary Whether calculate summary statistics (default: TRUE)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/at_least_one.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combined Probability of Events (At least one) — at_least_one","text":"Updated mcmodule new combined probability node","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/at_least_one.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combined Probability of Events (At least one) — at_least_one","text":"","code":"module <- list(   node_list = list(     p1 = list(       mcnode = mcstoc(runif,                       min = mcdata(c(0.1, 0.2, 0.3), type = \"0\", nvariates = 3),                       max = mcdata(c(0.2, 0.3, 0.4), type = \"0\", nvariates = 3),                       nvariates = 3       ),       data_name = \"data_x\",       keys = c(\"category\")     ),     p2 = list(       mcnode = mcstoc(runif,                       min = mcdata(c(0.5, 0.6, 0.7), type = \"0\", nvariates = 3),                       max = mcdata(c(0.6, 0.7, 0.8), type = \"0\", nvariates = 3),                       nvariates = 3       ),       data_name = \"data_y\",       keys = c(\"category\")     )   ),   data = list(     data_x = data.frame(       category = c(\"A\", \"B\", \"C\"),       scenario_id = c(\"0\", \"0\", \"0\")     ),     data_y = data.frame(       category = c(\"B\", \"B\", \"B\"),       scenario_id = c(\"0\", \"1\", \"2\")     )   ) )  module <- at_least_one(module, c(\"p1\", \"p2\"), name = \"p_combined\") #> p1 prev dim: [1001, 1, 3], new dim: [1001, 1, 5], 0 null matches #> p2 prev dim: [1001, 1, 3], new dim: [1001, 1, 5], 2 null matches print(module$node_list$p_combined$summary) #>      mc_name scenario_id category      mean         sd       Min      2.5% #> 1 p_combined           0        A 0.1491116 0.02879645 0.1000217 0.1031230 #> 2 p_combined           0        B 0.6632784 0.02499801 0.6034675 0.6159164 #> 3 p_combined           0        C 0.3499510 0.02871474 0.3000104 0.3027019 #> 4 p_combined           1        B 0.7387655 0.02366101 0.6825085 0.6941183 #> 5 p_combined           2        B 0.8125573 0.02262975 0.7622558 0.7710237 #>         25%       50%       75%     97.5%       Max  nsv Na's #> 1 0.1236943 0.1484803 0.1741846 0.1963494 0.1998955 1001    0 #> 2 0.6447058 0.6633223 0.6817710 0.7094008 0.7167370 1001    0 #> 3 0.3241776 0.3517681 0.3739251 0.3973875 0.3999062 1001    0 #> 4 0.7208637 0.7402874 0.7577584 0.7790421 0.7863647 1001    0 #> 5 0.7943139 0.8128350 0.8307268 0.8508712 0.8585983 1001    0"},{"path":"https://nataliaciria.github.io/mcmodule/reference/combine_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Two Modules — combine_modules","title":"Combine Two Modules — combine_modules","text":"Combines two mcmodules single mcmodule merging data components.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/combine_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Two Modules — combine_modules","text":"","code":"combine_modules(mcmodule_x, mcmodule_y)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/combine_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Two Modules — combine_modules","text":"mcmodule_x First module combine mcmodule_y Second module combine","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/combine_modules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Two Modules — combine_modules","text":"combined mcmodule object","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/combine_modules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Two Modules — combine_modules","text":"","code":"module_x <- list(   data = list(data_x = data.frame(x = 1:3)),   node_list = list(     node1 = list(type = \"in_node\"),     node2 = list(type = \"out_node\")   ),   modules = c(\"module_x\"),   exp = quote({node2 <- node1 * 2}) )  module_y <- list(   data = list(data_y = data.frame(y = 4:6)),   node_list = list(node3 = list(type = \"out_node\")),   modules = c(\"module_y\"),   exp = quote({node3 <- node1 + node2}) )  module_xy <- combine_modules(module_x, module_y)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/create_mc_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Monte Carlo Nodes from Data and Configuration Table — create_mc_nodes","title":"Create Monte Carlo Nodes from Data and Configuration Table — create_mc_nodes","text":"Creates Monte Carlo nodes (mcnodes) based instructions provided configuration table (mctable) input variables dataframe.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/create_mc_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Monte Carlo Nodes from Data and Configuration Table — create_mc_nodes","text":"","code":"create_mc_nodes(data, mctable = set_mctable(), envir = parent.frame())"},{"path":"https://nataliaciria.github.io/mcmodule/reference/create_mc_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Monte Carlo Nodes from Data and Configuration Table — create_mc_nodes","text":"data data frame containing input variables creating Monte Carlo nodes mctable configuration table specifying MC node definitions. Must contain columns: mcnode: Name Monte Carlo node mc_func: Distribution function use (applicable) transformation: Optional transformation apply input data from_variable: Optional source variable name transformation envir Environment MC nodes created (default: parent.frame())","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/create_mc_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Monte Carlo Nodes from Data and Configuration Table — create_mc_nodes","text":"return value, creates MC nodes specified environment","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/create_mc_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Monte Carlo Nodes from Data and Configuration Table — create_mc_nodes","text":"","code":"create_mc_nodes(data = imports_data, mctable = imports_mctable)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/eval_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a Monte Carlo Model Expression and create an mcmcmodule — eval_module","title":"Evaluate a Monte Carlo Model Expression and create an mcmcmodule — eval_module","text":"Takes set Monte Carlo model expressions evaluates creates mcmcmodule containing results metadata.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/eval_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a Monte Carlo Model Expression and create an mcmcmodule — eval_module","text":"","code":"eval_module(   exp,   data,   param_names = NULL,   prev_mcmodule = NULL,   summary = FALSE,   mctable = set_mctable(),   data_keys = set_data_keys(),   create_nodes = TRUE )"},{"path":"https://nataliaciria.github.io/mcmodule/reference/eval_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a Monte Carlo Model Expression and create an mcmcmodule — eval_module","text":"exp Model expression list expressions evaluate data Input data frame containing model parameters param_names Named vector parameter renaming (optional) prev_mcmodule Previous module(s) dependent calculations summary Logical; whether calculate summary statistics mctable Monte Carlo configuration table data_keys List key columns dataset create_nodes Logical; whether create new nodes data","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/eval_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate a Monte Carlo Model Expression and create an mcmcmodule — eval_module","text":"mcmodule object containing data, expressions, nodes","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/eval_module.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate a Monte Carlo Model Expression and create an mcmcmodule — eval_module","text":"","code":"# Basic usage with single expression eval_module(   exp = imports_exp,   data = imports_data,   mctable = imports_mctable,   data_keys = imports_data_keys ) #>  #> imports evaluated #>  #> mcmodule created (expressions: ) #> $data #> $data$imports_data #>   pathogen origin h_prev_min h_prev_max w_prev_min w_prev_max farms_n #> 1        a   nord       0.08       0.10       0.15        0.2       5 #> 2        a  south       0.02       0.05       0.15        0.2      10 #> 3        a   east       0.10       0.15       0.15        0.2       7 #> 4        b   nord       0.50       0.70       0.45        0.6       5 #> 5        b  south       0.25       0.30       0.37        0.4      10 #> 6        b   east       0.30       0.50       0.45        0.6       7 #>   animals_n_mean animals_n_sd test_origin test_sensi_min test_sensi_mode #> 1            100            6   sometimes           0.89            0.90 #> 2            130           10   sometimes           0.89            0.90 #> 3            140           12       never           0.89            0.90 #> 4            100            2      always           0.80            0.85 #> 5            130            4   sometimes           0.80            0.85 #> 6            140            3     unknown           0.80            0.85 #>   test_sensi_max #> 1           0.91 #> 2           0.91 #> 3           0.91 #> 4           0.90 #> 5           0.90 #> 6           0.90 #>  #>  #> $exp #> { #>     inf_a <- w_prev #>     false_neg_a <- inf_a * test_origin * (1 - test_sensi) #>     no_test_a <- inf_a * (1 - test_origin) #>     no_detect_a <- false_neg_a + no_test_a #> } #>  #> $node_list #> $node_list$w_prev #> $node_list$w_prev$type #> [1] \"in_node\" #>  #> $node_list$w_prev$mc_func #> [1] \"runif\" #>  #> $node_list$w_prev$description #> [1] \"Within herd prevalence\" #>  #> $node_list$w_prev$inputs_col #> [1] \"w_prev_min\" \"w_prev_max\" #>  #> $node_list$w_prev$input_dataset #> [1] \"prevalence_region\" #>  #> $node_list$w_prev$keys #> [1] \"pathogen\" \"origin\"   #>  #> $node_list$w_prev$module #> [1] \"imports\" #>  #> $node_list$w_prev$mc_name #> [1] \"w_prev\" #>  #> $node_list$w_prev$mcnode #>   node    mode  nsv nsu nva variate  min  mean median max Nas type outm #> 1    x numeric 1001   1   6       1 0.15 0.175  0.175 0.2   0    V each #> 2    x numeric 1001   1   6       2 0.15 0.176  0.176 0.2   0    V each #> 3    x numeric 1001   1   6       3 0.15 0.175  0.174 0.2   0    V each #> 4    x numeric 1001   1   6       4 0.45 0.525  0.526 0.6   0    V each #> 5    x numeric 1001   1   6       5 0.37 0.385  0.385 0.4   0    V each #> 6    x numeric 1001   1   6       6 0.45 0.525  0.523 0.6   0    V each #>  #> $node_list$w_prev$data_name #> [1] \"imports_data\" #>  #>  #> $node_list$test_origin #> $node_list$test_origin$type #> [1] \"in_node\" #>  #> $node_list$test_origin$description #> [1] \"Probability of the animals being tested in origin\" #>  #> $node_list$test_origin$inputs_col #> [1] \"test_origin\" #>  #> $node_list$test_origin$input_dataset #> [1] \"prevalence_region\" #>  #> $node_list$test_origin$keys #> [1] \"pathogen\" \"origin\"   #>  #> $node_list$test_origin$module #> [1] \"imports\" #>  #> $node_list$test_origin$mc_name #> [1] \"test_origin\" #>  #> $node_list$test_origin$mcnode #>   node    mode nsv nsu nva variate min mean median max Nas type outm #> 1    x numeric   1   1   6       1 0.5  0.5    0.5 0.5   0    0 each #> 2    x numeric   1   1   6       2 0.5  0.5    0.5 0.5   0    0 each #> 3    x numeric   1   1   6       3 0.0  0.0    0.0 0.0   0    0 each #> 4    x numeric   1   1   6       4 1.0  1.0    1.0 1.0   0    0 each #> 5    x numeric   1   1   6       5 0.5  0.5    0.5 0.5   0    0 each #> 6    x numeric   1   1   6       6 0.0  0.0    0.0 0.0   0    0 each #>  #> $node_list$test_origin$data_name #> [1] \"imports_data\" #>  #>  #> $node_list$test_sensi #> $node_list$test_sensi$type #> [1] \"in_node\" #>  #> $node_list$test_sensi$mc_func #> [1] \"rpert\" #>  #> $node_list$test_sensi$description #> [1] \"Test sensitivity\" #>  #> $node_list$test_sensi$inputs_col #> [1] \"test_sensi_min\"  \"test_sensi_mode\" \"test_sensi_max\"  #>  #> $node_list$test_sensi$input_dataset #> [1] \"test_sensitivity\" #>  #> $node_list$test_sensi$keys #> [1] \"pathogen\" #>  #> $node_list$test_sensi$module #> [1] \"imports\" #>  #> $node_list$test_sensi$mc_name #> [1] \"test_sensi\" #>  #> $node_list$test_sensi$mcnode #>   node    mode  nsv nsu nva variate   min  mean median   max Nas type outm #> 1    x numeric 1001   1   6       1 0.891 0.900  0.900 0.908   0    V each #> 2    x numeric 1001   1   6       2 0.891 0.900  0.900 0.909   0    V each #> 3    x numeric 1001   1   6       3 0.890 0.900  0.900 0.909   0    V each #> 4    x numeric 1001   1   6       4 0.804 0.850  0.850 0.895   0    V each #> 5    x numeric 1001   1   6       5 0.803 0.850  0.851 0.894   0    V each #> 6    x numeric 1001   1   6       6 0.803 0.849  0.849 0.897   0    V each #>  #> $node_list$test_sensi$data_name #> [1] \"imports_data\" #>  #>  #> $node_list$inf_a #> $node_list$inf_a$node_exp #> [1] \"w_prev\" #>  #> $node_list$inf_a$type #> [1] \"out_node\" #>  #> $node_list$inf_a$inputs #> [1] \"w_prev\" #>  #> $node_list$inf_a$module #> [1] \"imports\" #>  #> $node_list$inf_a$mc_name #> [1] \"inf_a\" #>  #> $node_list$inf_a$keys #> [1] \"pathogen\" \"origin\"   #>  #> $node_list$inf_a$param #> [1] \"w_prev\" #>  #> $node_list$inf_a$mcnode #>   node    mode  nsv nsu nva variate  min  mean median max Nas type outm #> 1    x numeric 1001   1   6       1 0.15 0.175  0.175 0.2   0    V each #> 2    x numeric 1001   1   6       2 0.15 0.176  0.176 0.2   0    V each #> 3    x numeric 1001   1   6       3 0.15 0.175  0.174 0.2   0    V each #> 4    x numeric 1001   1   6       4 0.45 0.525  0.526 0.6   0    V each #> 5    x numeric 1001   1   6       5 0.37 0.385  0.385 0.4   0    V each #> 6    x numeric 1001   1   6       6 0.45 0.525  0.523 0.6   0    V each #>  #> $node_list$inf_a$data_name #> [1] \"imports_data\" #>  #>  #> $node_list$false_neg_a #> $node_list$false_neg_a$node_exp #> [1] \"inf_a * test_origin * (1 - test_sensi)\" #>  #> $node_list$false_neg_a$type #> [1] \"out_node\" #>  #> $node_list$false_neg_a$inputs #> [1] \"inf_a\"       \"test_origin\" \"test_sensi\"  #>  #> $node_list$false_neg_a$module #> [1] \"imports\" #>  #> $node_list$false_neg_a$mc_name #> [1] \"false_neg_a\" #>  #> $node_list$false_neg_a$keys #> [1] \"pathogen\" \"origin\"   #>  #> $node_list$false_neg_a$param #> [1] \"inf_a\"       \"test_origin\" \"test_sensi\"  #>  #> $node_list$false_neg_a$mcnode #>   node    mode  nsv nsu nva variate     min    mean  median    max Nas type #> 1    x numeric 1001   1   6       1 0.00700 0.00876 0.00876 0.0107   0    V #> 2    x numeric 1001   1   6       2 0.00702 0.00879 0.00880 0.0107   0    V #> 3    x numeric 1001   1   6       3 0.00000 0.00000 0.00000 0.0000   0    V #> 4    x numeric 1001   1   6       4 0.05094 0.07866 0.07829 0.1120   0    V #> 5    x numeric 1001   1   6       5 0.01979 0.02890 0.02880 0.0387   0    V #> 6    x numeric 1001   1   6       6 0.00000 0.00000 0.00000 0.0000   0    V #>   outm #> 1 each #> 2 each #> 3 each #> 4 each #> 5 each #> 6 each #>  #> $node_list$false_neg_a$data_name #> [1] \"imports_data\" #>  #>  #> $node_list$no_test_a #> $node_list$no_test_a$node_exp #> [1] \"inf_a * (1 - test_origin)\" #>  #> $node_list$no_test_a$type #> [1] \"out_node\" #>  #> $node_list$no_test_a$inputs #> [1] \"inf_a\"       \"test_origin\" #>  #> $node_list$no_test_a$module #> [1] \"imports\" #>  #> $node_list$no_test_a$mc_name #> [1] \"no_test_a\" #>  #> $node_list$no_test_a$keys #> [1] \"pathogen\" \"origin\"   #>  #> $node_list$no_test_a$param #> [1] \"inf_a\"       \"test_origin\" #>  #> $node_list$no_test_a$mcnode #>   node    mode  nsv nsu nva variate   min   mean median max Nas type outm #> 1    x numeric 1001   1   6       1 0.075 0.0874 0.0876 0.1   0    V each #> 2    x numeric 1001   1   6       2 0.075 0.0879 0.0881 0.1   0    V each #> 3    x numeric 1001   1   6       3 0.150 0.1748 0.1741 0.2   0    V each #> 4    x numeric 1001   1   6       4 0.000 0.0000 0.0000 0.0   0    V each #> 5    x numeric 1001   1   6       5 0.185 0.1925 0.1924 0.2   0    V each #> 6    x numeric 1001   1   6       6 0.450 0.5250 0.5228 0.6   0    V each #>  #> $node_list$no_test_a$data_name #> [1] \"imports_data\" #>  #>  #> $node_list$no_detect_a #> $node_list$no_detect_a$node_exp #> [1] \"false_neg_a + no_test_a\" #>  #> $node_list$no_detect_a$type #> [1] \"out_node\" #>  #> $node_list$no_detect_a$inputs #> [1] \"false_neg_a\" \"no_test_a\"   #>  #> $node_list$no_detect_a$module #> [1] \"imports\" #>  #> $node_list$no_detect_a$mc_name #> [1] \"no_detect_a\" #>  #> $node_list$no_detect_a$keys #> [1] \"pathogen\" \"origin\"   #>  #> $node_list$no_detect_a$param #> [1] \"false_neg_a\" \"no_test_a\"   #>  #> $node_list$no_detect_a$mcnode #>   node    mode  nsv nsu nva variate    min   mean median   max Nas type outm #> 1    x numeric 1001   1   6       1 0.0821 0.0962 0.0963 0.110   0    V each #> 2    x numeric 1001   1   6       2 0.0823 0.0966 0.0969 0.110   0    V each #> 3    x numeric 1001   1   6       3 0.1500 0.1748 0.1741 0.200   0    V each #> 4    x numeric 1001   1   6       4 0.0509 0.0787 0.0783 0.112   0    V each #> 5    x numeric 1001   1   6       5 0.2056 0.2214 0.2213 0.238   0    V each #> 6    x numeric 1001   1   6       6 0.4500 0.5250 0.5228 0.600   0    V each #>  #> $node_list$no_detect_a$data_name #> [1] \"imports_data\" #>  #>  #>  #> $modules #> [1] \"imports\" #>  #> attr(,\"class\") #> [1] \"mcmodule\""},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_edge_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Edge Table for Network Construction — get_edge_table","title":"Generate Edge Table for Network Construction — get_edge_table","text":"Creates data frame containing edge relationships nodes Monte Carlo module network. row represents directed edge one node another.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_edge_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Edge Table for Network Construction — get_edge_table","text":"","code":"get_edge_table(mcmodule)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_edge_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Edge Table for Network Construction — get_edge_table","text":"mcmodule mcmodule object containing node relationships","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_edge_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Edge Table for Network Construction — get_edge_table","text":"data frame columns node_from node_to representing network edges","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_edge_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Edge Table for Network Construction — get_edge_table","text":"","code":"edge_table <- get_edge_table(imports_mcmodule)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_mcmodule_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Nodes from Monte Carlo Module — get_mcmodule_nodes","title":"Get Nodes from Monte Carlo Module — get_mcmodule_nodes","text":"Retrieves nodes Monte Carlo module assigns parent environment","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_mcmodule_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Nodes from Monte Carlo Module — get_mcmodule_nodes","text":"","code":"get_mcmodule_nodes(mcmodule, mc_names = NULL, envir = parent.frame())"},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_mcmodule_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Nodes from Monte Carlo Module — get_mcmodule_nodes","text":"mcmodule mcmodule mcnode_list object mc_names Optional vector node names retrieve envir Environment MC nodes created (default: parent.frame())","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_mcmodule_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Nodes from Monte Carlo Module — get_mcmodule_nodes","text":"subset node list containing requested nodes","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_node_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Node List from Model Expression — get_node_list","title":"Create Node List from Model Expression — get_node_list","text":"Creates list nodes based given model expression, handling input, output, previous nodes properties relationships.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_node_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Node List from Model Expression — get_node_list","text":"","code":"get_node_list(   exp,   param_names = NULL,   mctable = set_mctable(),   data_keys = set_data_keys() )"},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_node_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Node List from Model Expression — get_node_list","text":"exp R expression containing model calculations param_names Optional named vector parameter renaming mctable Reference table  mcnodes, defaults set_mctable() data_keys Data structure keys, defaults set_data_keys()","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_node_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Node List from Model Expression — get_node_list","text":"list class \"mcnode_list\" containing node information","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_node_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Node List from Model Expression — get_node_list","text":"","code":"if (FALSE) { # \\dontrun{ get_node_list(exp = imports_exp, mctable = imports_mctable, data_keys = imports_data_keys) } # }"},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_node_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Node Table for Network Construction — get_node_table","title":"Generate Node Table for Network Construction — get_node_table","text":"Creates data frame containing node information Monte Carlo module network. Includes node attributes, values, relationships.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_node_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Node Table for Network Construction — get_node_table","text":"","code":"get_node_table(mcmodule, variate = 1)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_node_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Node Table for Network Construction — get_node_table","text":"mcmodule mcmodule object containing node information variate Integer indicating variate extract (default: 1)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_node_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Node Table for Network Construction — get_node_table","text":"data frame containing node information attributes","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/get_node_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Node Table for Network Construction — get_node_table","text":"","code":"node_table <- get_node_table(imports_mcmodule)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Merged Import Data for Risk Assessment — imports_data","title":"Merged Import Data for Risk Assessment — imports_data","text":"dataset combining information animal imports, pathogen prevalence, test sensitivity across regions","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merged Import Data for Risk Assessment — imports_data","text":"","code":"imports_data"},{"path":[]},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_data.html","id":"imports-data","dir":"Reference","previous_headings":"","what":"imports_data","title":"Merged Import Data for Risk Assessment — imports_data","text":"data frame 6 rows 12 columns: pathogen Pathogen identifier (b) origin Region origin (nord, south, east) h_prev_min Minimum herd prevalence value h_prev_max Maximum herd prevalence value w_prev_min Minimum within-herd prevalence value w_prev_max Maximum within-herd prevalence value farms_n Number farms exporting animals animals_n_mean Mean number animals exported per farm animals_n_sd Standard deviation animals exported per farm test_origin Test used detect infected animals origin test_sensi_min Minimum test sensitivity value test_sensi_mode likely test sensitivity value test_sensi_max Maximum test sensitivity value","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Merged Import Data for Risk Assessment — imports_data","text":"Simulated data demonstration purposes","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_data_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Data Keys for Animal Imports Risk Assessment — imports_data_keys","title":"Example Data Keys for Animal Imports Risk Assessment — imports_data_keys","text":"hierarchical data structure containing test sensitivity, animal import, regional prevalence information, defined columns keys.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_data_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data Keys for Animal Imports Risk Assessment — imports_data_keys","text":"","code":"imports_data_keys"},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_data_keys.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Data Keys for Animal Imports Risk Assessment — imports_data_keys","text":"list three components: test_sensitivity List containing column names test sensitivity data \"pathogen\" key animal_imports List containing column names animal import data \"origin\" key prevalence_region List containing column names prevalence data \"pathogen\" \"origin\" keys","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_data_keys.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Data Keys for Animal Imports Risk Assessment — imports_data_keys","text":"Simulated data demonstration purposes","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Expression for calculating import infection probability — imports_exp","title":"Expression for calculating import infection probability — imports_exp","text":"quoted R expression calculates probability importing infected animal infected herd, taking account testing procedures accuracy.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expression for calculating import infection probability — imports_exp","text":"","code":"imports_exp"},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_exp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Expression for calculating import infection probability — imports_exp","text":"quoted R expression containing following variables: w_prev Within-herd prevalence test_origin Probability testing origin test_sensi Test sensitivity inf_a Probability animal infected false_neg_a Probability false negative test result no_test_a Probability testing no_detect_a Overall probability non-detection","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_mcmodule.html","id":null,"dir":"Reference","previous_headings":"","what":"Example mcmodule object containing Monte Carlo simulation results Animal Imports Risk Assessment — imports_mcmodule","title":"Example mcmodule object containing Monte Carlo simulation results Animal Imports Risk Assessment — imports_mcmodule","text":"list containing simulation results pathogen testing animal imports different origins, including: Within-herd prevalence (w_prev) Test sensitivity (test_sensi) Test origin probability (test_origin) Infection probability (inf_a) False negative probability (false_neg_a) test probability (no_test_a) Non-detection probability (no_detect_a)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_mcmodule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example mcmodule object containing Monte Carlo simulation results Animal Imports Risk Assessment — imports_mcmodule","text":"","code":"imports_mcmodule"},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_mcmodule.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example mcmodule object containing Monte Carlo simulation results Animal Imports Risk Assessment — imports_mcmodule","text":"mcmodule object following components: data Input data frame 6 rows 13 variables exp Model expressions calculating probabilities node_list List Monte Carlo nodes simulation results modules Character vector module names","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_mcmodule.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example mcmodule object containing Monte Carlo simulation results Animal Imports Risk Assessment — imports_mcmodule","text":"Simulated data demonstration purposes","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_mctable.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Monte Carlo Input Table for Import Risk Assessment — imports_mctable","title":"Example Monte Carlo Input Table for Import Risk Assessment — imports_mctable","text":"configured table Monte Carlo nodes used modeling import risk scenarios, particularly focused animal disease transmission pathways.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_mctable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Monte Carlo Input Table for Import Risk Assessment — imports_mctable","text":"","code":"imports_mctable"},{"path":[]},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_mctable.html","id":"imports-mctable","dir":"Reference","previous_headings":"","what":"imports_mctable","title":"Example Monte Carlo Input Table for Import Risk Assessment — imports_mctable","text":"data frame 7 rows 6 columns: mcnode Node identifier used Monte Carlo simulations description Human-readable description node represents mc_func R function used random number generation (e.g., runif, rnorm, rpert) from_variable Dependency reference variables applicable transformation Mathematical transformations applied node values sensi_analysis Logical flag indicating node included sensitivity analysis","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/imports_mctable.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Monte Carlo Input Table for Import Risk Assessment — imports_mctable","text":"Simulated data demonstration purposes","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/keys_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Match and align keys between two datasets — keys_match","title":"Match and align keys between two datasets — keys_match","text":"Match align keys two datasets","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/keys_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match and align keys between two datasets — keys_match","text":"","code":"keys_match(x, y, keys_names = NULL)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/keys_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match and align keys between two datasets — keys_match","text":"x First dataset containing keys match y Second dataset containing keys match keys_names Names columns use matching keys. NULL, uses common columns","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/keys_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match and align keys between two datasets — keys_match","text":"List containing: x First dataset group IDs y Second dataset group IDs xy Matched datasets aligned group scenario IDs","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/keys_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match and align keys between two datasets — keys_match","text":"","code":"if (FALSE) { # \\dontrun{ x <- data.frame(type = 1:2, scenario_id = c(0, 1)) y <- data.frame(type = 1:2, scenario_id = c(0, 2)) keys_match(x, y, keys_names = \"type\") } # }"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Monte Carlo Node Keys — mc_keys","title":"Get Monte Carlo Node Keys — mc_keys","text":"Extracts key columns Monte Carlo node's associated data.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Monte Carlo Node Keys — mc_keys","text":"","code":"mc_keys(mcmodule, mc_name, keys_names = NULL)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Monte Carlo Node Keys — mc_keys","text":"mcmodule Monte Carlo module containing nodes data mc_name Name node extract keys keys_names Vector column names extract (optional)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Monte Carlo Node Keys — mc_keys","text":"Dataframe scenario_id requested key columns","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Monte Carlo Node Keys — mc_keys","text":"","code":"keys_df <- mc_keys(imports_mcmodule, \"w_prev\")"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Monte Carlo Nodes — mc_match","title":"Match Monte Carlo Nodes — mc_match","text":"Matches two mcnodes : Group matching - Align nodes scenarios different group order Scenario matching - Align nodes groups different scenarios Null matching - Add missing groups across different scenarios","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Monte Carlo Nodes — mc_match","text":"","code":"mc_match(mcmodule, mc_name_x, mc_name_y, keys_names = NULL)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Monte Carlo Nodes — mc_match","text":"mcmodule Monte Carlo module mc_name_x First node name mc_name_y Second node name keys_names Names key columns","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match Monte Carlo Nodes — mc_match","text":"List containing matched nodes combined keys (keys_xy)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_match_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Monte Carlo Node with other data frame — mc_match_data","title":"Match Monte Carlo Node with other data frame — mc_match_data","text":"Matches mcnode data frame : Group matching - scenarios different group order Scenario matching - groups different scenarios Null matching - Add missing groups across different scenarios","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_match_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Monte Carlo Node with other data frame — mc_match_data","text":"","code":"mc_match_data(mcmodule, mc_name, data, keys_names = NULL)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_match_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Monte Carlo Node with other data frame — mc_match_data","text":"mcmodule Monte Carlo module mc_name Node name data Data frame containing keys match keys_names Names key columns","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_match_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match Monte Carlo Node with other data frame — mc_match_data","text":"List containing matched node, matched data combined keys (keys_xy)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Interactive Network Visualization — mc_network","title":"Create Interactive Network Visualization — mc_network","text":"Generates interactive network visualization using visNetwork library. visualization includes interactive features exploring model structure relationships.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Interactive Network Visualization — mc_network","text":"","code":"mc_network(mcmodule, variate = 1, color_pal = NULL, color_by = NULL)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Interactive Network Visualization — mc_network","text":"mcmodule mcmodule object variate Integer specifying variate visualize (default: 1) color_pal Custom color palette nodes (optional) color_by Column name determine node colors (optional)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Interactive Network Visualization — mc_network","text":"interactive visNetwork object features: Highlighting connected nodes Node selection filtering module Directional arrows showing relationships Hierarchical layout Draggable nodes","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Interactive Network Visualization — mc_network","text":"","code":"if (FALSE) { # \\dontrun{ network <- mc_network(imports_mcmodule) } # }"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute summary statistics for an mcnode object — mc_summary","title":"Compute summary statistics for an mcnode object — mc_summary","text":"Compute summary statistics mcnode object","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute summary statistics for an mcnode object — mc_summary","text":"","code":"mc_summary(   mcmodule = NULL,   mc_name = NULL,   keys_names = NULL,   data = NULL,   mcnode = NULL,   sep_keys = TRUE,   digits = NULL )"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute summary statistics for an mcnode object — mc_summary","text":"mcmodule mcmodule object containing node summarize mc_name Character string specifying name mcnode module keys_names Vector column names use keys grouping (default: NULL) data Optional data frame containing input data (default: NULL) mcnode Optional mcnode object summarize directly (default: NULL) sep_keys Logical; TRUE, keeps keys separate columns (default: TRUE) digits Integer indicating number significant digits rounding (default: NULL)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute summary statistics for an mcnode object — mc_summary","text":"data frame containing summary statistics columns: mc_name: Name mcnode keys: Grouping variables (sep_keys=FALSE) individual key columns (sep_keys=TRUE) Summary statistics including: mean: Average value sd: Standard deviation Various quantiles (2.5%, 25%, 50%, 75%, 97.5%)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute summary statistics for an mcnode object — mc_summary","text":"function can called two ways: providing mcmodule mc_name providing data mcnode directly","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute summary statistics for an mcnode object — mc_summary","text":"","code":"# Use with mcmodule summary_basic <- mc_summary(imports_mcmodule, \"w_prev\")  # Using custom keys and rounding summary_custom <- mc_summary(imports_mcmodule, \"w_prev\",   keys_names = c(\"origin\"),   digits = 3 )  # Use with data and mcnode w_prev <- imports_mcmodule$node_list$w_prev$mcnode summary_direct <- mc_summary(   data = imports_data,   mcnode = w_prev,   sep_keys = FALSE )"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_summary_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mcnode summary keys — mc_summary_keys","title":"Get mcnode summary keys — mc_summary_keys","text":"Get mcnode summary keys","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_summary_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mcnode summary keys — mc_summary_keys","text":"","code":"mc_summary_keys(mcsummary)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_summary_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mcnode summary keys — mc_summary_keys","text":"mcsummary data frame mc_summary()","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mc_summary_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get mcnode summary keys — mc_summary_keys","text":"vector key names","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_converg.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Simulation Convergence Analysis — mcmodule_converg","title":"Monte Carlo Simulation Convergence Analysis — mcmodule_converg","text":"Analyzes convergence Monte Carlo simulations computing statistical measures across iterations. Calculates standardized raw differences consecutive iterations evaluate stability convergence.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_converg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Simulation Convergence Analysis — mcmodule_converg","text":"","code":"mcmodule_converg(   mcmodule,   from_quantile = 0.95,   to_quantile = 1,   conv_threshold = NULL )"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_converg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Simulation Convergence Analysis — mcmodule_converg","text":"mcmodule Monte Carlo module object containing simulation results from_quantile Lower bound quantile analysis (default: 0.95) to_quantile Upper bound quantile analysis (default: 1) conv_threshold Optional custom convergence threshold standardized differences","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_converg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Simulation Convergence Analysis — mcmodule_converg","text":"data frame convergence statistics per node: expression: Expression identifier variate: Variate identifier node: Node identifier max_std_dif: Max standardized differences max_dif: Max raw differences conv_threshold: Convergence custom threshold (TRUE/FALSE), threshold provided conv_01: Convergence 1% std threshold (TRUE/FALSE) conv_025: Convergence 2.5% std threshold (TRUE/FALSE) conv_05: Convergence 5% std threshold (TRUE/FALSE)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_converg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monte Carlo Simulation Convergence Analysis — mcmodule_converg","text":"function performs following: Calculates convergence statistics specified quantile range Generates diagnostic plots standardized raw differences Provides detailed convergence summary including: Total nodes analyzed Number percentage nodes converged different thresholds Maximum/minimum deviations List non-converged nodes ()","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_converg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Simulation Convergence Analysis — mcmodule_converg","text":"","code":"if (FALSE) { # \\dontrun{ results <- mcmodule_converg(mc_results) results <- mcmodule_converg(mc_results, from_quantile = 0.90, conv_threshold = 0.01) } # }"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Module Index — mcmodule_index","title":"Monte Carlo Module Index — mcmodule_index","text":"Monte Carlo Module Index","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Module Index — mcmodule_index","text":"","code":"mcmodule_index(mcmodule)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Module Index — mcmodule_index","text":"mcmodule Monte Carlo module object","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Module Index — mcmodule_index","text":"list containing expression data, data keys, global keys","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_rel_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Relative Change in Monte Carlo Module — mcmodule_rel_change","title":"Calculate Relative Change in Monte Carlo Module — mcmodule_rel_change","text":"Calculate Relative Change Monte Carlo Module","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_rel_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Relative Change in Monte Carlo Module — mcmodule_rel_change","text":"","code":"mcmodule_rel_change(   mcmodule_def,   mcmodule_alt,   mc_names = NULL,   mcnode_admin = mcnode_admin )"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_rel_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Relative Change in Monte Carlo Module — mcmodule_rel_change","text":"mcmodule_def Default mcmoduleduction module mcmodule_alt Alternative mcmoduleduction module mc_names Optional names Monte Carlo nodes mcnode_admin Monte Carlo node administration object","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_rel_change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Relative Change in Monte Carlo Module — mcmodule_rel_change","text":"Modified mcmodule relative changes","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_spearman.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Spearman Correlation for Monte Carlo Module — mcmodule_spearman","title":"Calculate Spearman Correlation for Monte Carlo Module — mcmodule_spearman","text":"Calculate Spearman Correlation Monte Carlo Module","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_spearman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Spearman Correlation for Monte Carlo Module — mcmodule_spearman","text":"","code":"mcmodule_spearman(mcmodule, agg_output = \"total_agg\")"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_spearman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Spearman Correlation for Monte Carlo Module — mcmodule_spearman","text":"mcmodule Monte Carlo module object agg_output Name aggregated output, defaults \"total_agg\"","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcmodule_spearman.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Spearman Correlation for Monte Carlo Module — mcmodule_spearman","text":"Data frame Spearman correlation results","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcnode_na_rm.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace NA and Infinite Values in mcnode Objects — mcnode_na_rm","title":"Replace NA and Infinite Values in mcnode Objects — mcnode_na_rm","text":"Replaces NA infinite values mcnode objects specified value.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcnode_na_rm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace NA and Infinite Values in mcnode Objects — mcnode_na_rm","text":"","code":"mcnode_na_rm(mcnode, na_value = 0)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcnode_na_rm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace NA and Infinite Values in mcnode Objects — mcnode_na_rm","text":"mcnode mcnode object containing NA infinite values na_value Numeric value replace NA infinite values (default = 0)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcnode_na_rm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace NA and Infinite Values in mcnode Objects — mcnode_na_rm","text":"mcnode object NA infinite values replaced na_value","code":""},{"path":[]},{"path":"https://nataliaciria.github.io/mcmodule/reference/mcnode_na_rm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace NA and Infinite Values in mcnode Objects — mcnode_na_rm","text":"","code":"sample_mcnode <- mcstoc(runif,                min = mcdata(c(NA, 0.2, -Inf), type = \"0\", nvariates = 3),                max = mcdata(c(NA, 0.3, Inf), type = \"0\", nvariates = 3),                nvariates = 3 ) #> Warning: NAs produced #> Warning: NAs produced # Replace NA and Inf with 0 clean_mcnode <- mcnode_na_rm(sample_mcnode)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/node_list_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Include summary and keys in node_list — node_list_summary","title":"Include summary and keys in node_list — node_list_summary","text":"Include summary keys node_list","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/node_list_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include summary and keys in node_list — node_list_summary","text":"","code":"node_list_summary(mcmodule = NULL, data = NULL, node_list = NULL)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/node_list_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include summary and keys in node_list — node_list_summary","text":"mcmodule mc module object data data frame mc inputs node_list list nodes","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/node_list_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Include summary and keys in node_list — node_list_summary","text":"updated node_list","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/prevalence_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Regional Prevalence Data — prevalence_region","title":"Regional Prevalence Data — prevalence_region","text":"dataset containing prevalence information two pathogens across three regions","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/prevalence_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regional Prevalence Data — prevalence_region","text":"","code":"prevalence_region"},{"path":[]},{"path":"https://nataliaciria.github.io/mcmodule/reference/prevalence_region.html","id":"prevalence-region","dir":"Reference","previous_headings":"","what":"prevalence_region","title":"Regional Prevalence Data — prevalence_region","text":"data frame 6 rows 4 columns: pathogen Pathogen identifier (b) origin Region origin (nord, south, east) h_prev_min Minimum herd prevalence value h_prev_max Maximum herd prevalence value w_prev_min Minimum within-herd prevalence value w_prev_max Maximum within-herd prevalence value test_origin Test used detect infected animals origin","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/prevalence_region.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Regional Prevalence Data — prevalence_region","text":"Simulated data demonstration purposes","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/reset_data_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset Data Keys — reset_data_keys","title":"Reset Data Keys — reset_data_keys","text":"Resets data model empty list","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/reset_data_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset Data Keys — reset_data_keys","text":"","code":"reset_data_keys()"},{"path":"https://nataliaciria.github.io/mcmodule/reference/reset_data_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset Data Keys — reset_data_keys","text":"return value, resets data keys","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/reset_data_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset Data Keys — reset_data_keys","text":"","code":"reset_data_keys() #> data_keys reset"},{"path":"https://nataliaciria.github.io/mcmodule/reference/reset_mctable.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset Monte Carlo Inputs Table — reset_mctable","title":"Reset Monte Carlo Inputs Table — reset_mctable","text":"Resets Monte Carlo inputs table","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/reset_mctable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset Monte Carlo Inputs Table — reset_mctable","text":"","code":"reset_mctable()"},{"path":"https://nataliaciria.github.io/mcmodule/reference/reset_mctable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset Monte Carlo Inputs Table — reset_mctable","text":"empty data frame standard mctable structure","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/set_data_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or Get Global Data Keys — set_data_keys","title":"Set or Get Global Data Keys — set_data_keys","text":"Manages global data model either setting new data keys retrieving current ones. data model consists named lists containing column names associated key columns.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/set_data_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or Get Global Data Keys — set_data_keys","text":"","code":"set_data_keys(data_keys = NULL)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/set_data_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or Get Global Data Keys — set_data_keys","text":"data_keys Optional list lists. inner list must contain: cols: vector containing column names data keys: vector specifying key columns NULL, returns current data model.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/set_data_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or Get Global Data Keys — set_data_keys","text":"data_keys = NULL: Returns current global data model data_keys provided: Sets new data model returns invisibly","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/set_data_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set or Get Global Data Keys — set_data_keys","text":"","code":"print(imports_data_keys) #> $test_sensitivity #> $test_sensitivity$cols #> [1] \"pathogen\"        \"test_sensi_min\"  \"test_sensi_mode\" \"test_sensi_max\"  #>  #> $test_sensitivity$keys #> [1] \"pathogen\" #>  #>  #> $animal_imports #> $animal_imports$cols #> [1] \"origin\"         \"farms_n\"        \"animals_n_mean\" \"animals_n_sd\"   #>  #> $animal_imports$keys #> [1] \"origin\" #>  #>  #> $prevalence_region #> $prevalence_region$cols #> [1] \"pathogen\"    \"origin\"      \"h_prev_min\"  \"h_prev_max\"  \"w_prev_min\"  #> [6] \"w_prev_max\"  \"test_origin\" #>  #> $prevalence_region$keys #> [1] \"pathogen\" \"origin\"   #>  #>  set_data_keys(imports_data_keys) #> data_keys set to imports_data_keys"},{"path":"https://nataliaciria.github.io/mcmodule/reference/set_mctable.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or Get Monte Carlo Inputs Table — set_mctable","title":"Set or Get Monte Carlo Inputs Table — set_mctable","text":"Manages Monte Carlo inputs table global package environment either setting new data retrieving current table. table stores information Monte Carlo nodes including descriptions, functions, dependencies, sensitivity analysis settings.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/set_mctable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or Get Monte Carlo Inputs Table — set_mctable","text":"","code":"set_mctable(data = NULL)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/set_mctable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or Get Monte Carlo Inputs Table — set_mctable","text":"data Optional data frame containing MC table information. Must contain 'mcnode' column. columns auto-filled missing. NULL, returns current MC table.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/set_mctable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or Get Monte Carlo Inputs Table — set_mctable","text":"data = NULL: Returns current MC table data provided: Sets new MC table returns invisibly table contains following columns: mcnode - Character. Name Monte Carlo node (required) description - Character. Description parameter mc_func - Character. Probability distribution from_variable - Character. Variable name data table, column name different mcnode transformation - Character. Transformation applied original column values sensi_analysis - Logical. Whether include sensitivity analysis","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/set_mctable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set or Get Monte Carlo Inputs Table — set_mctable","text":"","code":"# Get current MC table current_table <- set_mctable()  # Set new MC table mct <- data.frame(   mcnode = c(\"h_prev\", \"w_prev\"),   description = c(\"Herd prevalence\", \"Within herd prevalence\"),   mc_func = c(\"runif\", \"runif\"),   sensi_analysis = c(TRUE, TRUE) ) set_mctable(mct) #> Warning: The following columns were not specified and will be filled with default values: from_variable, transformation #> mctable set to structure(list(mcnode = c(\"h_prev\", \"w_prev\"), description = c(\"Herd prevalence\", \"Within herd prevalence\"), mc_func = c(\"runif\", \"runif\"), sensi_analysis = c(TRUE, TRUE), from_variable = c(NA, NA), transformation = c(NA, NA)), row.names = c(NA, -2L), class = \"data.frame\")"},{"path":"https://nataliaciria.github.io/mcmodule/reference/test_sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Sensitivity Data — test_sensitivity","title":"Test Sensitivity Data — test_sensitivity","text":"dataset containing test sensitivity values two pathogens","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/test_sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Sensitivity Data — test_sensitivity","text":"","code":"test_sensitivity"},{"path":[]},{"path":"https://nataliaciria.github.io/mcmodule/reference/test_sensitivity.html","id":"test-sensitivity","dir":"Reference","previous_headings":"","what":"test_sensitivity","title":"Test Sensitivity Data — test_sensitivity","text":"data frame 2 rows 4 columns: pathogen Pathogen identifier (b) test_sensi_min Minimum test sensitivity value test_sensi_mode likely test sensitivity value test_sensi_max Maximum test sensitivity value","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/trial_totals.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial Probability and Expected Counts — trial_totals","title":"Trial Probability and Expected Counts — trial_totals","text":"Calculates probabilities expected counts across hierarchical levels (trial, subset, set) structured population. Uses trial probabilities handles nested sampling conditional probabilities.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/trial_totals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial Probability and Expected Counts — trial_totals","text":"","code":"trial_totals(   mcmodule,   mc_names,   trials_n,   subsets_n = NULL,   subsets_p = NULL,   name = NULL,   prefix = NULL,   combine_prob = TRUE,   level_suffix = c(trial = \"trial\", subset = \"subset\", set = \"set\"),   mctable = set_mctable(),   agg_keys = NULL,   agg_suffix = \"agg\",   keep_variates = FALSE,   summary = TRUE )"},{"path":"https://nataliaciria.github.io/mcmodule/reference/trial_totals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trial Probability and Expected Counts — trial_totals","text":"mcmodule mcmodule object containing input data node structure mc_names Vector node names process trials_n Trial count column name subsets_n Subset count column name (optional) subsets_p Subset prevalence column name (optional) name Custom name output nodes (optional) prefix Prefix output node names (optional) combine_prob Combine probability nodes assuming independence (default: TRUE) level_suffix list suffixes hierarchical level (default: c(trial=\"trial\",subset=\"subset\",set=\"set\")) mctable Data frame containing Monte Carlo nodes definitions (default: set_mctable()) agg_keys Column names aggregation (optional) agg_suffix Suffix aggregated node names (default: \"agg\") keep_variates whether preserve individual values (default: FALSE) summary Include summary statistics TRUE (default: TRUE)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/trial_totals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trial Probability and Expected Counts — trial_totals","text":"Updated mcmodule object containing: Combined node probabilities Probabilities counts trial level Probabilities counts subset level Probabilities counts set level","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/trial_totals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trial Probability and Expected Counts — trial_totals","text":"","code":"imports_mcmodule <- trial_totals(   mcmodule = imports_mcmodule,   mc_names = \"no_detect_a\",   trials_n = \"animals_n\",   subsets_n = \"farms_n\",   subsets_p = \"h_prev\",   mctable = imports_mctable ) print(imports_mcmodule$node_list$no_detect_a_set$summary) #>           mc_name pathogen origin      mean          sd       Min      2.5% #> 1 no_detect_a_set        a   nord 0.3751019 0.019789800 0.3408802 0.3428733 #> 2 no_detect_a_set        a  south 0.2952493 0.063365388 0.1831839 0.1887273 #> 3 no_detect_a_set        a   east 0.6072974 0.045790740 0.5217925 0.5254801 #> 4 no_detect_a_set        b   nord 0.9873207 0.008134035 0.9686790 0.9703136 #> 5 no_detect_a_set        b  south 0.9589867 0.007988016 0.9436867 0.9446953 #> 6 no_detect_a_set        b   east 0.9661267 0.021386374 0.9176546 0.9225663 #>         25%       50%       75%     97.5%       Max  nsv Na's #> 1 0.3576659 0.3746006 0.3927420 0.4074480 0.4094135 1001    0 #> 2 0.2397273 0.2961064 0.3496624 0.3961052 0.4012000 1001    0 #> 3 0.5675934 0.6116438 0.6478969 0.6757313 0.6793628 1001    0 #> 4 0.9813778 0.9891075 0.9943813 0.9972351 0.9975596 1001    0 #> 5 0.9525700 0.9593445 0.9657100 0.9712939 0.9717407 1001    0 #> 6 0.9505468 0.9715490 0.9848100 0.9917126 0.9921561 1001    0"},{"path":"https://nataliaciria.github.io/mcmodule/reference/visNetwork_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate visNetwork Edge Table — visNetwork_edges","title":"Generate visNetwork Edge Table — visNetwork_edges","text":"Creates formatted edge table suitable visualization visNetwork.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/visNetwork_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate visNetwork Edge Table — visNetwork_edges","text":"","code":"visNetwork_edges(mcmodule)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/visNetwork_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate visNetwork Edge Table — visNetwork_edges","text":"mcmodule mcmodule object","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/visNetwork_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate visNetwork Edge Table — visNetwork_edges","text":"data frame containing edge information visNetwork","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/visNetwork_edges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate visNetwork Edge Table — visNetwork_edges","text":"","code":"if (FALSE) { # \\dontrun{ vis_edges <- visNetwork_edges(imports_mcmodule) } # }"},{"path":"https://nataliaciria.github.io/mcmodule/reference/visNetwork_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Network Node Table for Visualization — visNetwork_nodes","title":"Generate Network Node Table for Visualization — visNetwork_nodes","text":"Creates formatted node table visualization visNetwork. Includes styling formatting network visualization.","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/visNetwork_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Network Node Table for Visualization — visNetwork_nodes","text":"","code":"visNetwork_nodes(mcmodule, variate = 1, color_pal = NULL, color_by = NULL)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/visNetwork_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Network Node Table for Visualization — visNetwork_nodes","text":"mcmodule mcmodule object containing network structure variate Integer specifying variate extract (default: 1) color_pal Custom color palette nodes (optional) color_by Column name determine node colors (optional)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/visNetwork_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Network Node Table for Visualization — visNetwork_nodes","text":"data frame formatted visNetwork columns: id: Unique node identifier color: Node color based type/category module: Module association expression: Node expression type title: Hover text containing node details","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/visNetwork_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Network Node Table for Visualization — visNetwork_nodes","text":"","code":"if (FALSE) { # \\dontrun{ nodes_df <- visNetwork_nodes(imports_mcmodule) } # }"},{"path":"https://nataliaciria.github.io/mcmodule/reference/wif_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Datasets With Differing Scenarios — wif_match","title":"Match Datasets With Differing Scenarios — wif_match","text":"Matches datasets group preserves baseline scenarios (scenario_id=0) scenarios differ .","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/wif_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Datasets With Differing Scenarios — wif_match","text":"","code":"wif_match(x, y, by = NULL)"},{"path":"https://nataliaciria.github.io/mcmodule/reference/wif_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Datasets With Differing Scenarios — wif_match","text":"x First dataset match y Second dataset match Grouping variable(s) match , defaults \"hg\" (homogeneous groups)","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/wif_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match Datasets With Differing Scenarios — wif_match","text":"List containing matched datasets aligned scenario IDs: First element: matched version dataset x Second element: matched version dataset y","code":""},{"path":"https://nataliaciria.github.io/mcmodule/reference/wif_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match Datasets With Differing Scenarios — wif_match","text":"","code":"x <- data.frame(   category = c(\"a\", \"b\", \"a\", \"b\"),   scenario_id = c(0, 0, 1, 1),   hg = c(1, 2, 1, 2),   value = 1:4 )  y <- data.frame(   category = c(\"a\", \"b\", \"a\", \"b\"),   scenario_id = c(0, 0, 2, 2),   hg = c(1, 2, 1, 2),   value = 5:8 )  # Automatic matching result <- wif_match(x, y) #> Group by: category #> From 4 rows (2 groups, 2 scenarios) and 4 rows (2 groups, 2 scenarios), to 6 rows (2 groups, 3 scenarios)"},{"path":"https://nataliaciria.github.io/mcmodule/news/index.html","id":"mcmodule-development-version","dir":"Changelog","previous_headings":"","what":"mcmodule (development version)","title":"mcmodule (development version)","text":"Initial CRAN submission.","code":""}]
